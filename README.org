* literate-clojure-mode

Set of utilities to complement a clojure literate programming workflow using org-mode.

** Installation

In spacemacs, follow these steps to install literate-clojure-mode:

1. git =clone git@github.com:RakutenReady/literate-clojure-mode.git ~/.emacs.d/private/local/literate-clojure-mode=
2. Add =(literate-clojure-mode :location local)= to =dotspacemacs-additional-packages=

You can now enable =literate-clojure-mode=.

** Configuration

*** Add Keybindings

You can add keybindings to easily invoke interactive functions provided in the package:

#+BEGIN_SRC emacs-lisp
(spacemacs/set-leader-keys "o o" 'litclj-tangle-goto-org)
(spacemacs/set-leader-keys "o t" 'litclj-goto-tangle)
(spacemacs/set-leader-keys "o d" 'litclj-detangle-all)
#+END_SRC

*** Follow mode

The follow mode enables to view in a split window the source of a tangled clojure code block. To enable it by default:
#+BEGIN_SRC emacs-lisp
(require 'literate-clojure-mode)
(add-hook 'clojure-mode-hook 'literate-clojure-follow-mode)
#+END_SRC

*** Auto-detangle mode

The auto detangle mode, as it name suggests, automatically detangles changes made in the clojure source files to the org mode file. To enable it by default:

#+BEGIN_SRC emacs-lisp
(require 'literate-clojure-mode)
(add-hook 'clojure-mode-hook 'literate-clojure-auto-detangle-mode)
#+END_SRC


*** Validate mode
Validates that a org mode buffer does not contain any duplicate code block names. If a buffer is invalid, it shows an annoying pop-up on every save.

#+BEGIN_SRC emacs-lisp
(require 'literate-clojure-mode)
(add-hook 'clojure-mode-hook 'literate-clojure-validate-mode)
#+END_SRC
